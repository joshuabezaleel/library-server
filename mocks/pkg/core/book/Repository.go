// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import book "github.com/joshuabezaleel/library-server/pkg/core/book"
import mock "github.com/stretchr/testify/mock"

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Delete provides a mock function with given fields: bookID
func (_m *Repository) Delete(bookID string) error {
	ret := _m.Called(bookID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(bookID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: bookID
func (_m *Repository) Get(bookID string) (*book.Book, error) {
	ret := _m.Called(bookID)

	var r0 *book.Book
	if rf, ok := ret.Get(0).(func(string) *book.Book); ok {
		r0 = rf(bookID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*book.Book)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(bookID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: _a0
func (_m *Repository) Save(_a0 *book.Book) (*book.Book, error) {
	ret := _m.Called(_a0)

	var r0 *book.Book
	if rf, ok := ret.Get(0).(func(*book.Book) *book.Book); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*book.Book)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*book.Book) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: _a0
func (_m *Repository) Update(_a0 *book.Book) (*book.Book, error) {
	ret := _m.Called(_a0)

	var r0 *book.Book
	if rf, ok := ret.Get(0).(func(*book.Book) *book.Book); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*book.Book)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*book.Book) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
